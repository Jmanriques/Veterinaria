/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.edu.intecap.veterinaria.gui;

import co.edu.intecap.veterinaria.negocio.Mascota;
import co.edu.intecap.veterinaria.negocio.mascotas.Gato;
import co.edu.intecap.veterinaria.negocio.mascotas.Perro;
import co.edu.intecap.veterinaria.util.Utilidad;
import com.sun.media.jfxmediaimpl.MediaUtils;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import static java.awt.image.ImageObserver.WIDTH;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author Capacitaciones
 */
public class Gestor extends javax.swing.JDialog {

    private final Mascota mascota;
    private final Perro perro;
    private final Gato gato;
    /**
     * Creates new form Gestor
     */
    public Gestor(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.mascota= null;
        
        this.perro= null;
        
        this.gato= null;
        
    }
    public Gestor(java.awt.Frame parent,boolean modal, Perro perro){
        super(parent, modal);
        initComponents();
        this.gato= null;
        this.perro = perro;
        this.mascota = perro;
        asignarListeners();
        pnActividadGato.setVisible(false);
    }
    public Gestor(java.awt.Frame parent,boolean modal, Gato gato){
        super(parent, modal);
        initComponents();
        this.perro= null;
        this.gato = gato;
        this.mascota = gato;
        asignarListeners();
        pnActividadPerro.setVisible(false);
    }
   
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnJugar = new javax.swing.JButton();
        btnDormir = new javax.swing.JButton();
        btnVacunar = new javax.swing.JButton();
        btnComer = new javax.swing.JButton();
        btnBeber = new javax.swing.JButton();
        btnDefecar = new javax.swing.JButton();
        pnActividadPerro = new javax.swing.JPanel();
        btnLadrar = new javax.swing.JButton();
        btnMorder = new javax.swing.JButton();
        btnCorrer = new javax.swing.JButton();
        pnActividadGato = new javax.swing.JPanel();
        btnAranar = new javax.swing.JButton();
        btnLamer = new javax.swing.JButton();
        btnMaullar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnJugar.setText("Jugar");

        btnDormir.setText("Dormir");

        btnVacunar.setText("Vacunar");

        btnComer.setText("Comer");

        btnBeber.setText("Beber");

        btnDefecar.setText("Defecar");

        btnLadrar.setText("Ladrar");

        btnMorder.setText("Morder");

        btnCorrer.setText("Correr");

        javax.swing.GroupLayout pnActividadPerroLayout = new javax.swing.GroupLayout(pnActividadPerro);
        pnActividadPerro.setLayout(pnActividadPerroLayout);
        pnActividadPerroLayout.setHorizontalGroup(
            pnActividadPerroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnActividadPerroLayout.createSequentialGroup()
                .addComponent(btnLadrar)
                .addGap(18, 18, 18)
                .addComponent(btnMorder)
                .addGap(18, 18, 18)
                .addComponent(btnCorrer, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );
        pnActividadPerroLayout.setVerticalGroup(
            pnActividadPerroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnActividadPerroLayout.createSequentialGroup()
                .addGroup(pnActividadPerroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLadrar)
                    .addComponent(btnMorder)
                    .addComponent(btnCorrer))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        btnAranar.setText("Ara√±ar");

        btnLamer.setText("Lamer");

        btnMaullar.setText("Maullar");

        javax.swing.GroupLayout pnActividadGatoLayout = new javax.swing.GroupLayout(pnActividadGato);
        pnActividadGato.setLayout(pnActividadGatoLayout);
        pnActividadGatoLayout.setHorizontalGroup(
            pnActividadGatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnActividadGatoLayout.createSequentialGroup()
                .addComponent(btnAranar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLamer)
                .addGap(18, 18, 18)
                .addComponent(btnMaullar, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                .addGap(4, 4, 4))
        );
        pnActividadGatoLayout.setVerticalGroup(
            pnActividadGatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnActividadGatoLayout.createSequentialGroup()
                .addGroup(pnActividadGatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAranar)
                    .addComponent(btnLamer)
                    .addComponent(btnMaullar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnActividadGato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(pnActividadPerro, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnJugar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnComer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnDormir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnBeber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(btnVacunar))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(btnDefecar)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnJugar)
                    .addComponent(btnDormir)
                    .addComponent(btnVacunar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnComer)
                    .addComponent(btnBeber)
                    .addComponent(btnDefecar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnActividadPerro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnActividadGato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gestor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gestor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gestor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gestor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Gestor dialog = new Gestor(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    public void asignarListeners(){
        asignarListenerMascota();
        asignarListenerPerro();
        asignarListenerGato();
        
    }
    
    
    
    
    private void asignarListenerMascota (){
        ActionListener accionMascota = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                
                
                JButton btnAccion = (JButton) e.getSource();
                if(btnAccion.equals(btnJugar)){ 
                    if(!energiaBaja()){
                    return;
                    
                }
                    if(perro != null){
                        perro.jugar();
                        
                    }
                    if(gato != null){
                        gato.jugar();
                    }
                    
                }
               if(btnAccion.equals(btnDormir)){
                   mascota.dormir();
                   
               }
               
               if(btnAccion.equals(btnVacunar)){
                   mascota.vacunar();
                   
               }
               
               if(btnAccion.equals(btnComer)){
                   if(perro != null){
                        perro.comer(45);
                        
                    }
                    if(gato != null){
                        gato.comer(35);
                    }
                   
               }
               
               if(btnAccion.equals(btnBeber)){
                   if(perro != null){
                        perro.beber(20);
                        
                    }
                    if(gato != null){
                        gato.beber(10);
                    }
                   
               }
               
               if(btnAccion.equals(btnDefecar)){
                   if(perro != null){
                        perro.defecar();
                        
                    }
                    if(gato != null){
                        gato.defecar();
                    }
                   
               }
               
                
            }
        };
        btnJugar.addActionListener(accionMascota);
        btnComer.addActionListener(accionMascota);
        btnBeber.addActionListener(accionMascota);
        btnDormir.addActionListener(accionMascota);
        btnVacunar.addActionListener(accionMascota);
        btnDefecar.addActionListener(accionMascota);
    }
    private void asignarListenerPerro (){
        ActionListener accionPerro = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JButton btnAccion = (JButton) e.getSource();
                if(btnAccion.equals(btnLadrar)){
                   perro.ladrar();
                   
               }
                if(btnAccion.equals(btnMorder)){
                    if(!energiaBaja()){
                    return;
                    
                }
                   perro.morder();
                   
               }
                if(btnAccion.equals(btnCorrer)){
                    if(!energiaBaja()){
                    return;
                    
                }
                   perro.correr(50);
                   
               }
                
               
                
            }
        };
        btnLadrar.addActionListener(accionPerro);
        btnCorrer.addActionListener(accionPerro);
        btnMorder.addActionListener(accionPerro);
    }
    private void asignarListenerGato (){
        ActionListener accionGato = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
               JButton btnAccion = (JButton) e.getSource();
                if(btnAccion.equals(btnAranar)){
                    if(!energiaBaja()){
                    return;
                    
                }
                   gato.aranar();
                   
               }
                if(btnAccion.equals(btnLamer)){
                    if(!energiaBaja()){
                    return;
                    
                }
                   gato.lamer();
                   
               }
                if(btnAccion.equals(btnMaullar)){
                   gato.maullar();
                   
               }
                
            }
        };
        btnLamer.addActionListener(accionGato);
        btnMaullar.addActionListener(accionGato);
        btnAranar.addActionListener(accionGato);
                
    }
    public boolean energiaBaja (){
        if(mascota.getEnergia()<0){
                    Utilidad.lanzaAlerta(this, "estoy cansado", "bajo de energia",JOptionPane.WARNING_MESSAGE);
                  return false;  
                }
        return true;
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAranar;
    private javax.swing.JButton btnBeber;
    private javax.swing.JButton btnComer;
    private javax.swing.JButton btnCorrer;
    private javax.swing.JButton btnDefecar;
    private javax.swing.JButton btnDormir;
    private javax.swing.JButton btnJugar;
    private javax.swing.JButton btnLadrar;
    private javax.swing.JButton btnLamer;
    private javax.swing.JButton btnMaullar;
    private javax.swing.JButton btnMorder;
    private javax.swing.JButton btnVacunar;
    private javax.swing.JPanel pnActividadGato;
    private javax.swing.JPanel pnActividadPerro;
    // End of variables declaration//GEN-END:variables
}
